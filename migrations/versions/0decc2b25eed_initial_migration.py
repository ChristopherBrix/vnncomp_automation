"""initial migration

Revision ID: 0decc2b25eed
Revises: 
Create Date: 2024-07-03 12:44:36.140234

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '0decc2b25eed'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('flasklogin_users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=40), nullable=False),
    sa.Column('password', sa.String(length=200), nullable=False),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('enabled', sa.Boolean(), server_default=sa.text('0'), nullable=False),
    sa.Column('admin', sa.Boolean(), server_default=sa.text('0'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_flasklogin_users')),
    sa.UniqueConstraint('username', name=op.f('uq_flasklogin_users_username'))
    )
    op.create_table('task_steps',
    sa.Column('_db_id', sa.Integer(), nullable=False),
    sa.Column('_db_type', sa.String(), nullable=True),
    sa.Column('_db_task_id', sa.Integer(), nullable=True),
    sa.Column('done', sa.Boolean(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('_db_aborted', sa.Boolean(), nullable=True),
    sa.Column('_db_run_as_root', sa.Boolean(), nullable=True),
    sa.Column('benchmark_name', sa.String(), nullable=True),
    sa.Column('run_networks', sa.String(), nullable=True),
    sa.Column('_db_results', sa.String(), nullable=True),
    sa.Column('benchmark_name2', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['_db_task_id'], ['tasks._db_id'], name=op.f('fk_task_steps__db_task_id_tasks')),
    sa.PrimaryKeyConstraint('_db_id', name=op.f('pk_task_steps'))
    )
    op.create_table('tasks',
    sa.Column('_db_id', sa.Integer(), nullable=False),
    sa.Column('_db_type', sa.String(), nullable=True),
    sa.Column('_db_aws_instance_type', sa.Integer(), nullable=False),
    sa.Column('_db_ami', sa.String(), nullable=True),
    sa.Column('_db_name', sa.String(), nullable=True),
    sa.Column('_db_repository', sa.String(), nullable=True),
    sa.Column('_db_hash', sa.String(), nullable=True),
    sa.Column('_db_script_dir', sa.String(), nullable=True),
    sa.Column('_db_current_step_id', sa.Integer(), nullable=True),
    sa.Column('_db_total_runtime', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['_db_current_step_id'], ['task_steps._db_id'], name=op.f('fk_tasks__db_current_step_id_task_steps')),
    sa.PrimaryKeyConstraint('_db_id', name=op.f('pk_tasks'))
    )
    op.create_table('benchmark_tasks',
    sa.Column('_db_id', sa.Integer(), nullable=False),
    sa.Column('_db_vnnlib_dir', sa.String(), nullable=True),
    sa.Column('_db_onnx_dir', sa.String(), nullable=True),
    sa.Column('_db_csv_file', sa.String(), nullable=True),
    sa.Column('_db_csv_onnx_base', sa.String(), nullable=True),
    sa.Column('_db_csv_vnnlib_base', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['_db_id'], ['tasks._db_id'], name=op.f('fk_benchmark_tasks__db_id_tasks')),
    sa.PrimaryKeyConstraint('_db_id', name=op.f('pk_benchmark_tasks'))
    )
    op.create_table('instances',
    sa.Column('_db_id', sa.String(), nullable=False),
    sa.Column('_db_creation_timestamp', sa.DateTime(), nullable=True),
    sa.Column('_db_aws_instance_type', sa.Integer(), nullable=False),
    sa.Column('_db_ami', sa.String(), nullable=True),
    sa.Column('_db_state', sa.String(), nullable=True),
    sa.Column('_db_reachability', sa.String(), nullable=True),
    sa.Column('_db_ip', sa.String(), nullable=True),
    sa.Column('_db_disabled', sa.Boolean(), nullable=True),
    sa.Column('_db_task_id', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['_db_task_id'], ['tasks._db_id'], name=op.f('fk_instances__db_task_id_tasks')),
    sa.PrimaryKeyConstraint('_db_id', name=op.f('pk_instances'))
    )
    op.create_table('logs',
    sa.Column('_db_id', sa.Integer(), nullable=False),
    sa.Column('_db_step_id', sa.Integer(), nullable=True),
    sa.Column('_db_text', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['_db_step_id'], ['task_steps._db_id'], name=op.f('fk_logs__db_step_id_task_steps')),
    sa.PrimaryKeyConstraint('_db_id', name=op.f('pk_logs'))
    )
    op.create_table('toolkit_tasks',
    sa.Column('_db_id', sa.Integer(), nullable=False),
    sa.Column('_db_post_install_tool', sa.String(), nullable=True),
    sa.Column('_db_user_id', sa.Integer(), nullable=True),
    sa.Column('_db_run_install_as_root', sa.Boolean(), nullable=True),
    sa.Column('_db_run_post_install_as_root', sa.Boolean(), nullable=True),
    sa.Column('_db_run_tool_as_root', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['_db_id'], ['tasks._db_id'], name=op.f('fk_toolkit_tasks__db_id_tasks')),
    sa.ForeignKeyConstraint(['_db_user_id'], ['flasklogin_users.id'], name=op.f('fk_toolkit_tasks__db_user_id_flasklogin_users')),
    sa.PrimaryKeyConstraint('_db_id', name=op.f('pk_toolkit_tasks'))
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('toolkit_tasks')
    op.drop_table('logs')
    op.drop_table('instances')
    op.drop_table('benchmark_tasks')
    op.drop_table('tasks')
    op.drop_table('task_steps')
    op.drop_table('flasklogin_users')
    # ### end Alembic commands ###
